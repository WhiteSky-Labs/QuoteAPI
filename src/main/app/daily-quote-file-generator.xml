<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:schedulers="http://www.mulesoft.org/schema/mule/schedulers" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.7.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/schedulers http://www.mulesoft.org/schema/mule/schedulers/current/mule-schedulers.xsd">
    <http:request-config name="HTTP_Request_Configuration" host="http://localhost" port="8081" basePath="/api" doc:name="HTTP Request Configuration"/>
    <vm:connector name="QuoteVM" validateConnections="true" doc:name="VM">
        <vm:queue-profile>
            <default-in-memory-queue-store/>
        </vm:queue-profile>
    </vm:connector>
    <flow name="schedulerFlow">
        <poll doc:name="Daily Schedule @ 10 AM">
            <schedulers:cron-scheduler expression="0 0 10 * * ?"/>
            <vm:outbound-endpoint exchange-pattern="request-response" path="quote.file.generator.trigger" connector-ref="QuoteVM" doc:name="VM">
                <vm:transaction action="NONE"/>
            </vm:outbound-endpoint>
        </poll>
        <logger message="#['Quote Generation Triggered @ : ' + server.dateTime]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="translateFlow">
        <vm:inbound-endpoint exchange-pattern="request-response" path="vm.quote.translate" connector-ref="QuoteVM" doc:name="VM Quote Translate">
            <vm:transaction action="NONE"/>
        </vm:inbound-endpoint>
        <dw:transform-message doc:name="Assign Target Languages Variable">
            <dw:set-variable variableName="targetLanguages"><![CDATA[%dw 1.0
%output application/java
---
p('quoteapi.dailyquote.language.targets') splitBy ","]]></dw:set-variable>
        </dw:transform-message>
        <dw:transform-message doc:name="Transform Response to Translate Request">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	"quotes":  flowVars.targetLanguages map {
	  "quote": {
			"author": payload.quote.author,
			"quotetext": payload.quote.quotetext
		},
		"activity": 'translate',
		"translation":
		{
			"source": p('quoteapi.dailyquote.language.source'),
			"target": $
		}
	}
}
]]></dw:set-payload>
        </dw:transform-message>
        <dw:transform-message doc:name="Translate">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"quote": payload.quotes[0].quote,
	"translations": payload.quotes map {
		"language": $.translation.target,
		(lookup("put:/quotes:application/json:quoteapi-config",$) map {"translatedText":$})
	}
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="fileGenerationFlow">
        <vm:inbound-endpoint exchange-pattern="request-response" path="vm.quote.file" connector-ref="QuoteVM" doc:name="VM Quote File">
            <vm:transaction action="NONE"/>
        </vm:inbound-endpoint>
        <dw:transform-message doc:name="Prepare Request for Generation of FIle having the Original Quote">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%var timestamp = now as :localdatetime
---
{
  "filename": p('quoteapi.dailyquote.filename.prefix') ++ sessionVars.transactionTimestamp ++ p('quoteapi.dailyquote.filename.ext'),
  "action": "create",
  "text": "$timestamp | $(payload.quote.quotetext) - $(payload.quote.author)"
}
]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="post:/quotes/file:application/json:quoteapi-config" doc:name="post:/quotes/file:application/json:quoteapi-config"/>
    </flow>
    <flow name="compressFlow">
        <vm:inbound-endpoint exchange-pattern="request-response" path="vm.quote.compress" connector-ref="QuoteVM" doc:name="VM Compress"/>
        <dw:transform-message doc:name="Set Request for Compression">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	compression: payload.translations map {
		"quote": {
			"quotetext": $.translatedText
		},
		"activity": 'compress',
		"compression":
		{
			"key": " ",
			"keyIndexes": []
		}
	}
}
]]></dw:set-payload>
        </dw:transform-message>
        <dw:transform-message doc:name="Compress">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"compressed": payload.compression map {
		"compression":lookup("put:/quotes:application/json:quoteapi-config",$)
	}
}

]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    
    <flow name="daily-quote-file-generatorFlow">
        <composite-source doc:name="Composite Source">
            <http:listener config-ref="quoteapi-httpListenerConfig" path="/" doc:name="HTTP"/>
            <vm:inbound-endpoint exchange-pattern="request-response" path="quote.file.generator.trigger" connector-ref="QuoteVM" doc:name="VM Trigger">
                <vm:transaction action="NONE"/>
            </vm:inbound-endpoint>
        </composite-source>
        <set-session-variable variableName="transactionTimestamp" value="#[server.dateTime.toDate().getTime() / 1000]" doc:name="Session Timestamp"/>
        <dw:transform-message doc:name="Get Quote of The Day Request  Payload">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://swanandmokashi.com
---
{
	ns0#GetQuote: {
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="get:/quotes/day:quoteapi-config" doc:name="get:/quotes/day:quoteapi-config"/>
        <dw:transform-message doc:name="Transform JSON to HashMap">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	"quote": payload.quote
}]]></dw:set-payload>
        </dw:transform-message>
        <set-variable variableName="quoteOfTheDay" value="#[payload]" doc:name="Assign Quote of The Day"/>
        <vm:outbound-endpoint exchange-pattern="request-response" path="vm.quote.file" connector-ref="QuoteVM" doc:name="Send Quote to VM Quote File">
            <vm:transaction action="NONE"/>
        </vm:outbound-endpoint>
        <dw:transform-message doc:name="Set Quote for Translation">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	"quote": {
		"author": flowVars.quoteOfTheDay.quote.author,
		"quotetext": flowVars.quoteOfTheDay.quote.quotetext
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <vm:outbound-endpoint exchange-pattern="request-response" path="vm.quote.translate" connector-ref="QuoteVM" doc:name="Send Quote to VM Quote Translate">
            <vm:transaction action="NONE"/>
        </vm:outbound-endpoint>
        <vm:outbound-endpoint exchange-pattern="request-response" path="vm.quote.compress" connector-ref="QuoteVM" doc:name="Send Translated Quote to VM Compress">
            <vm:transaction action="NONE"/>
        </vm:outbound-endpoint>
        <dw:transform-message doc:name="Send to JMS Topic">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	"jmsQuotes": payload.compressed map {
		"message": $.compression.quote,
		"sendJMS": lookup('send-jms-messageFlow', {
			"quote": {
				"timestamp": sessionVars.transactionTimestamp,
				"quotetext": $.compression.quote.quoteText,
				"keyIndexes": $.compression.quoteEntities[?($.name == "keyIndexes")][0].value
			}
		})
	}
}
	
]]></dw:set-payload>
        </dw:transform-message>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
</mule>
