<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd" version="EE-3.7.0">
    <http:listener-config name="quoteapi-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration" />
    <apikit:config name="quoteapi-config" raml="quoteapi.raml" consoleEnabled="true" consolePath="console" doc:name="Router" />
    <ws:consumer-config name="SwanAndMokashiServiceConfiguration" wsdlLocation="wsdl/SwanAndMokashiBusinessService.wsdl" service="QuoteofTheDay" port="QuoteofTheDaySoap12" serviceAddress="http://www.swanandmokashi.com/Homepage/Webservices/QuoteOfTheDay.asmx" doc:name="Web Service Consumer" />
    <file:connector name="DailyQuoteFileRepository" autoDelete="false" outputAppend="true" streaming="true" validateConnections="true" doc:name="File" />
    <flow name="quoteapi-main">
        <http:listener config-ref="quoteapi-httpListenerConfig" path="/api/*" doc:name="HTTP" />
        <apikit:router config-ref="quoteapi-config" doc:name="Quote APIkit Router" />
        <exception-strategy ref="quoteapi-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy" />
    </flow>
    <flow name="put:/quotes:application/json:quoteapi-config">
        <dw:transform-message doc:name="Assign Activity FlowVars">
            <dw:set-variable variableName="activity"><![CDATA[%dw 1.0
%output application/java
---
lower payload.activity]]></dw:set-variable>
        </dw:transform-message>
        <choice doc:name="Choose Activity">
            <when expression="#[flowVars.activity == &quot;translate&quot;]">
                <dw:transform-message doc:name="Prepare Message for Translation">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	"text": payload.quote.quotetext,
	"source": payload.translation.source,
	"target": payload.translation.target
}]]></dw:set-payload>
                </dw:transform-message>
                <flow-ref name="translatorFlow" doc:name="translatorFlow" />
            </when>
            <when expression="#[flowVars.activity == &quot;compress&quot; || flowVars.activity == &quot;decompress&quot;]">
                <dw:transform-message doc:name="Prepare Message for Compress/Decompress">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%var keyIndexes = payload.compression.keyIndexes
---
{
	"quotetext": payload.quote.quotetext,
	"author": payload.quote.author,
	"key": payload.compression.key,
	"keyIndexes": [] 
		unless ((payload.compression.keyIndexes != null) 
			and (sizeOf payload.compression.keyIndexes) > 0) 
		otherwise payload.compression.keyIndexes joinBy ",",
	"activity": lower payload.activity
}]]></dw:set-payload>
                </dw:transform-message>
                <flow-ref name="quote-compress-decompressFlow" doc:name="quote-compress-decompressFlow" />
            </when>
        </choice>
    </flow>
    <flow name="get:/quotes/day:quoteapi-config">
        <ws:consumer config-ref="SwanAndMokashiServiceConfiguration" operation="GetQuote" doc:name="Get Quote Web Service" />
        <json:xml-to-json-transformer doc:name="XML to JSON" />
        <dw:transform-message doc:name="Transform Quote">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http://swanandmokashi.com
---
{
	"quote": {
		"author": payload.GetQuoteResponse.GetQuoteResult.Author,
		"quotetext": payload.GetQuoteResponse.GetQuoteResult.QuoteOfTheDay
	}
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="post:/quotes/file:application/json:quoteapi-config">
        <dw:transform-message doc:name="Assign Quote Filename">
            <dw:set-variable variableName="filename"><![CDATA[%dw 1.0
%output application/java
---
payload.filename]]></dw:set-variable>
        </dw:transform-message>
        <dw:transform-message doc:name="Prepare Text to Insert/Update in File">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.text ++ p('line.separator')

]]></dw:set-payload>
        </dw:transform-message>
        <file:outbound-endpoint path="${quoteapi.dailyquoterepo.path}" outputPattern="#[flowVars.filename]" connector-ref="DailyQuoteFileRepository" responseTimeout="10000" doc:name="Create/Update File"/>
        <set-payload value="#[flowVars.filename]" doc:name="Set Payload"/>
        <dw:transform-message doc:name="Create JSON Response">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"filename": payload,
	"response": "Quote file has been created/updated."
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <apikit:mapping-exception-strategy name="quoteapi-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;error_message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;error_message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;error_message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;error_message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;error_message&quot;: &quot;There is something wrong with your request.&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
